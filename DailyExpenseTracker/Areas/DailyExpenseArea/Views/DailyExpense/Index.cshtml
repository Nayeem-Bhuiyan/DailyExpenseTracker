@model DailyExpenseViewModel
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Style{
    .select2 {
    width: 100%!important;
    }
}

<div class="row">
    <div class="col-xl-12">
        <div class="breadcrumb-holder">
            <h1 class="main-title float-left">Expense Details</h1>
            <ol class="breadcrumb float-right">
                <li class="breadcrumb-item"><a href="/"><i class="fa fa-home fa-2x"></i></a></li>
                <li class="breadcrumb-item active"><a href="#">Daily Expense</a></li>
            </ol>
            <div class="clearfix"></div>
        </div>
    </div>
</div>


<div class="row">

    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
        <div class="card mb-3">
            <div class="card-header">
                <h3><i class="fa fa-free-code-camp bigfonts"></i>Create New Expense</h3>
            </div>

            <div class="card-body">

                <form autocomplete="off" id="frmData" asp-area="DailyExpenseArea" asp-controller="DailyExpense" asp-action="Index">
                    <input type="hidden" name="DailyExpenseId" id="DailyExpenseId" value="0" />
                    <div class="form-group row">
                        <label for="DateOfExpense" class="col-sm-2 col-form-label">Expense Date</label>
                        <div class="col-sm-6">
                            <input type="text" class="form-control" id="DateOfExpense" name="DateOfExpense" required autocomplete="off">
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="CostAmount" class="col-sm-2 col-form-label">Category</label>
                        <div class="col-sm-6">
                            <select id="CategoryId" name="CategoryId" class="form-control" required>
                                <option value="">Select</option>
                                @foreach (var item in Model.categories)
                                {
                                    <option value="@item.Id">@item?.CategoryName</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="CostAmount" class="col-sm-2 col-form-label">Cost Amount</label>
                        <div class="col-sm-6">
                            <input type="text" class="form-control" id="CostAmount" name="CostAmount" placeholder="Enter Cost Amount" required autocomplete="off">
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="ExpenseDetails" class="col-sm-2 col-form-label">Expense Details</label>
                        <div class="col-sm-6">
                            <input type="text" class="form-control" id="ExpenseDetails" name="ExpenseDetails" placeholder="Enter Expense Details" autocomplete="off">
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-sm-2 col-form-label"></label>
                        <div class="col-sm-10">
                            <button type="submit" class="btn btn-success" id="btnSave">Save</button>
                        </div>
                    </div>
                </form>

            </div>
        </div><!-- end card-->
    </div>
</div>


<div class="row">

    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
        <div class="card mb-3">
            <div class="card-header">
                <h3><i class="fa fa-table"></i>Daily Expense Information</h3>
            </div>

            <div class="card-body">
                <div class="table-responsive">
                    <table id="tblData" class="table table-bordered table-hover display">
                        <thead class="bg-success text-white">
                            <tr>
                                <th>ID</th>
                                <th>Category</th>
                                <th>CostAmount</th>
                                <th>Date</th>
                                <th>ExpenseDetails</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.dailyExpenses != null)
                            {
                                @foreach (var item in Model.dailyExpenses)
                                {
                                    <tr>
                                        <td>@item?.Id</td>
                                        <td>@item?.Category?.CategoryName</td>
                                        <td>@item?.CostAmount</td>
                                        <td>@item?.DateOfExpense?.ToString("dd-MM-yyyy")</td>
                                        <td>@item?.ExpenseDetails</td>
                                        <td>
                                            <a class="btn btn-warning" onclick="Edit(@item.Id,@item?.CategoryId,@item?.CostAmount,'@item?.DateOfExpense','@item?.ExpenseDetails')">Edit</a>
                                            <a class="btn btn-danger" onclick="Delete(@item.Id)">Delete</a>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr></tr>
                            }


                        </tbody>
                    </table>
                </div>

            </div>
        </div><!-- end card-->
    </div>
</div>


@section Scripts{

    <script>
        $(document).ready(function () {
            CleanData();
            $("#tblData").DataTable({
                order: [[0, "desc"]]
            });

            $('#CategoryId').select2();


            var d = new Date();
            var strDate = d.getFullYear() + "/" + (d.getMonth() + 1) + "/" + d.getDate();
            $('#DateOfExpense').val(strDate);

            $('#DateOfExpense').flatpickr({ dateFormat: "Y-m-d", minDate: "@DateTime.Now.ToString("MM/dd/yyyy")", maxDate:"today" });


            $("input[id*='CostAmount']").keydown(function (event) {
                if (event.shiftKey == true) {
                    event.preventDefault();
                }
                if ((event.keyCode >= 48 && event.keyCode <= 57) ||
                    (event.keyCode >= 96 && event.keyCode <= 105) ||
                    event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 ||
                    event.keyCode == 39 || event.keyCode == 46 || event.keyCode == 190) {
                } else {
                    event.preventDefault();
                }
                if ($(this).val().indexOf('.') !== -1 && event.keyCode == 190)
                    event.preventDefault();
                //if a decimal has been added, disable the "."-button

            });

        })

        function CleanData() {
            $("#DailyExpenseId").val(0);
            $("#CategoryId").val("");
            $("#CostAmount").val("");
            $("#DateOfExpense").val("");
            $("#ExpenseDetails").val("");
        }

        function formatDate(date) {
            date = new Date(date);
            var year = date.getFullYear(),
                month = date.getMonth() + 1, // months are zero indexed
                day = date.getDate(),
                hour = date.getHours(),
                minute = date.getMinutes(),
                second = date.getSeconds(),
                hourFormatted = hour % 12 || 12, // hour returned in 24 hour format
                minuteFormatted = minute < 10 ? "0" + minute : minute,
                morning = hour < 12 ? "am" : "pm";
            return day + "/" + + month + "/" + year;
        }


        function Edit(Id,CategoryId,CostAmount,DateOfExpense,ExpenseDetails) {
            CleanData();
            $("#DailyExpenseId").val(Id);
            $("#CategoryId").val(CategoryId);
            $("#CostAmount").val(CostAmount);
            $("#DateOfExpense").val(formatDate(DateOfExpense));
            $("#ExpenseDetails").val(ExpenseDetails);
            $("#CategoryId").val(CategoryId).trigger('change');
        }

        $('#btnSave').click(function () {

            $('#frmData').on('submit', function (event) {

                event.preventDefault();
                var frmdata = {
                    __RequestVerificationToken: $("[name='__RequestVerificationToken']").val(),
                    DailyExpenseId: $("#DailyExpenseId").val(),
                    CategoryId:$("#CategoryId").val(),
                    CostAmount:$("#CostAmount").val(),
                    DateOfExpense:$("#DateOfExpense").val(),
                    ExpenseDetails:$("#ExpenseDetails").val()
                }

                console.log(frmdata);
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You want to save this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, save it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: "/DailyExpenseArea/DailyExpense/Index",
                            type: "POST",
                            data:frmdata,
                            beforeSend: function () {
                                $('#btnSave').attr('disabled', 'disabled');
                                $('#btnSave').val('Submitting...');

                            },
                        }).done(function (data) {

                            $("#btnSave").removeAttr('disabled');
                            swal.fire('success', 'Saved Successfully!', 'success').then(function () {
                                CleanData();
                                location.reload();
                            });

                        }).fail(function () {
                            CleanData();
                            $("#btnSave").removeAttr('disabled');
                            swal.fire('warning', 'Failed!', 'warning');
                        })
                    }

                });
            })
        })

        function Delete(Id) {

            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to retrieve this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "/DailyExpenseArea/DailyExpense/Delete/"+Id,
                        data: { Id: Id },
                        type: 'POST'
                    })
                        .done(function () {
                            Swal.fire({
                                icon: 'success',
                                title: 'Deleted Successfully!!',
                                showConfirmButton: false,
                                timer: 1000
                            }).then(function () {
                                window.location.reload();
                            })
                        })
                        .fail(function () {
                            swal.fire('Cancelled', 'It will not be deleted. Please try again later !!!', 'error');
                        });
                }
            });
        }
    </script>
}

